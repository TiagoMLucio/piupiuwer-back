model Piu {
  id        String     @id @default(uuid())
  text      String
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
  favorites Favorite[]
  likes     PiuLike[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("pius")
}

model User {
  id        String     @id @default(uuid())
  pius      Piu[]
  likes     PiuLike[]
  favorites Favorite[]
}

model PiuLike {
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
  piu    Piu    @relation(fields: [piuId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  piuId  String

  @@unique(fields: [userId, piuId], name: "likeId")
  @@map("likes")
}

model Favorite {
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
  piu    Piu    @relation(fields: [piuId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  piuId  String

  @@unique(fields: [userId, piuId], name: "favoriteId")
  @@map("favorites")
}
